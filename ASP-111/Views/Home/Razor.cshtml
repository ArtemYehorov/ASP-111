@{
    ViewData["Title"] = "Razor";
}

<div class="text-center">
    <h1 class="display-4">Введение в Razor / CSHTML</h1>
</div>

<p>
    Одной из необходимых задач серверной разработки являеться расширением возможностей HTML с дополнением его алгоритмическими конструкциями.
    В ASP исторически использовались спецтеги &lt;asp, однако им на смену пришел синтаксис Razor.
</p>

<p>
    <b>Razor</b> - специальный инструмент для включения в HTML С# (CS) кода.
    Файлы с данными инструкциями имеют расширение .CSHTML
    Данные файлы "заполняются" на сервере, в браузер приходит чистый HTML 
    (без специнструкций). Основным командным символом Razor является &commat;
    поэтому в HTML для его вставки используется сущность <b>&amp;commat;</b>
</p>
<h3>Выражения</h3>
<p>
    Выражение (в программировании) - инструмция, имеющая результат.
    Razor позволяет вычислять выражения и выводить их результаты в HTML
    при помощи конструкции &commat;() : <br/>
    <code>
        &commat;(2 + 3) = @(2 + 3)
    </code>
    <br/>
    В простых приложениях круглые скобки можно не ставить, однако тогда границы выражения определяет Razor и не всегда так, как хотелось бы нам
</p>
<h3>Блоки кода</h3>
<p>
    Инструкции, не требующие вывода результатов в HTML, помещаются в блоки 
    &commat;{}. В этих блоках возможны практически любые комманды  .NET(C#)
    Однако, применение лишней активности в представлениях крайне не рекомендуется паттерном MVC
</p>
<p>
    @{
        int x = 10;
        x += 5;
    }
    x = @x
    x + 2 = @x + 2 - неправильная вариация
    x + 2 = @(x + 2) - поставил скобки
</p>
<h3>Условная верстка</h3>
<p>
    Средствами Razor можно создавать (или не создавать) блоки верстки 
    в зависимости от программных условий. Для этого используется команда 
    &commat;if(){...}
    Для множественного выбора можно использовать &commat;switch(){...}

</p>
@if(x < 10)
{
    <b>Этот блок будет при x &lt; 10</b>
}
else 
{
    <i>Этот блок будет при x &ge; 10</i>
}
<h3>Циклическая верстка</h3>
<p>
    Основа современных сайтов - работа с массивами данных (коллекциями) данных.
    В Razor есть все виды циклов C# -
    &commat;for(){...}
    &commat;foreach(){...}
    &commat;while(){...}
    &commat;do(){...}while
</p>
@{
    string[] strings = new string[] { "строка 1", "вторая строка", " строка №3" };
}
@for(int i = 0; i < strings.Length; i++)
{
    int j = i + 1;
    <p>@j. @strings[i]</p>
}
<hr/>
<p>
    Total: @strings.Length <br/>
    Total@strings.Length <br />
</p>
<hr />
<ul>
    @foreach (var str in strings)
    {
        <li>@str</li>
    }
</ul>
<hr />
<table>
    <thead>
        <tr>
            <th>Номер</th>
            <th>Значение</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < strings.Length; i++)
        {
            int j = i + 1;
            <tr>
                <td>@j</td>
                <td>@strings[i]</td>
            </tr>
        }
    </tbody>
</table>
<hr />
<div class="tiles-container">
    @foreach (var str in strings)
    {
        <div class="tile">@str</div>
    }
</div>
